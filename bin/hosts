#!/usr/bin/env php
<?php

require __DIR__.'/../vendor/autoload.php';

class Hosts extends Illuminate\Console\Command
{
    protected $signature = 'hosts
        {source* : Support: google, apple}
        {--o|operator=ChinaNet : Support: ChinaNet, ChinaUnicom, CMCC}';

    protected $description = 'Fetch the latest hosts';

    public function handle()
    {
        $hosts = '';

        foreach ($this->argument('source') as $source) {
            if ($source == 'google') {
                $hosts .= $this->getGoogleHosts();
            } elseif ($source == 'apple') {
                $hosts .= $this->getAppleHosts($this->option('operator'));
            }
        }

        $this->comment($hosts);
    }

    protected function getGoogleHosts()
    {
        $url = 'https://raw.githubusercontent.com/googlehosts/hosts/master/hosts-files/hosts';

        return file_get_contents($url) ?: null;
    }

    protected function getAppleHosts($operator = 'ChinaNet')
    {
        $cwd = getcwd();

        $dir = sys_get_temp_dir().'/'.uniqid('AppleDNS-', true);
        $repo = 'git://github.com/gongjianhui/AppleDNS.git';

        exec("git clone $repo --single-branch --depth=1 '$dir' &>/dev/null");
        if (! file_exists($dir)) {
            $this->error("Cloning $repo failed.");
            exit(1);
        }

        chdir($dir);

        $operatorFile = $operator.'.json';
        if (! file_exists($operatorFile)) {
            $this->error($operatorFile.' does not exist');
            exit(1);
        }

        exec("python fetch-timeout.py '$operatorFile' &>/dev/null", $output, $result);

        if ($result === 0) {
            $hosts = shell_exec('python export-configure.py hosts');
        } else {
            $hosts = null;
        }

        chdir($cwd);
        @unlink($dir);

        return $hosts;
    }
}

(new ElfSundae\Console\Application('Hosts', '1.0.0'))
    ->add(new Hosts)
    ->getApplication()
    ->runAsSingle();
